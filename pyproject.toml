[tool.poetry]
authors = ["Authot <author@example.com>"]
description = ""
license = "MIT"
name = "simple-site"
version = "0.1.0"

[tool.poetry.dependencies]
aiofiles = "^0.6.0"
html-dsl = "^0.4.0"
pytest = "^6.2.4"
pytest-cov = "^2.11.1"
python = "^3.8"
starlette = "^0.14.2"
typer = "^0.3.2"
uvicorn = "^0.13.4"

[tool.poetry.dev-dependencies]
black = "^21.5b0"
isort = "^5.8.0"
mypy = "^0.812"
pylint = "^2.8.2"

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]

[tool.pylint.master]
job = 0
suggestion-mode = "yes"

[tool.pylint.format]
max-line-length = 120

[tool.pylint.basic]
argument-naming-style = "any"
attr-naming-style = "any"
function-naming-style = "any"
variable-naming-style = "any"

[tool.pylint.message_control]
disable = ["missing-docstring"]

[tool.pylint.design]
min-public-methods = 1

[tool.pytest.ini_options]
addopts = "-ra -svv --cov=./"
minversion = "6.0"
testpaths = [
  "tests",
]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "raise AssertionError",
  "raise NotImplementedError",
  "if __name__ == .__main__.:",
  "def run()",
]
fail_under = 90.0
omit = ['*/__main__.py', 'helper/serve.py']
show_missing = true
skip_covered = true
skip_empty = true
sort = "miss"

[tool.coverage.path]
source = "./"

[tool.black]
line-length = 120
